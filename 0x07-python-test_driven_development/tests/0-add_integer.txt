0-add_integer Module:
=====================

Import "add_integer" from "0-add_integer' module

       >>> add_integer = __import__('0-add_integer').add_integer

Return sum of two positive integers:

       >>> add_integer(1, 1)
       2

Return the sume if one element is negative integer:

       >> add_integer(2, -1)
       1

Return the sume if both elements are negative integer:

       >> add_integer(-2, -1)
       -3

Return sum if one value provided:
       >>> add_integer(1)
       99

Return an error:
       >>> add_integer(None)
       Traceback (most recent call last):
       TypeError: a must be an integer

Return an error:
       >>> add_integer(float('nan'))
       Traceback (most recent call last):
       ValueError: cannot convert float NaN to integer

Do not return sum of list with int:
       >>> add_integer([1, 2, 3], 1)
       Traceback (most recent call last):
       TypeError: a must be an integer

Return the sume of two floats as an integer:
       >>> add_integer(1.1, 2.1)
       3

Return the sume of two floats as an integer:
       >>> add_integer(1, 2.1)
       3

Do not calculated infinity float numbers:
       >>> add_integer(float('inf'), 1)
       Traceback (most recent call last):
       ...
       OverflowError: cannot convert float infinity to integer

Do not add string with number:
       >>> print(add_integer('notrebloh', 1))
       Traceback (most recent call last):
       ...
       TypeError: a must be an integer

